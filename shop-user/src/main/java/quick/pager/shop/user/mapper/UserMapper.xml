<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="quick.pager.shop.user.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="quick.pager.shop.model.user.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="delete_status" jdbcType="BIT" property="deleteStatus"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, phone, password, create_time, update_time, delete_status
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where id = #{id,jdbcType=BIGINT}
    </select>

    <insert id="insertSelective" parameterType="quick.pager.shop.model.user.User">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="deleteStatus != null">
                delete_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteStatus != null">
                #{deleteStatus,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="quick.pager.shop.model.user.User">
        update t_user
        <set>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteStatus != null">
                delete_status = #{deleteStatus,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByPhone" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user t
        where t.phone = #{phone,jdbcType=VARCHAR} and t.delete_status = 0
    </select>


    <select id="selectInfoByPhone" resultType="quick.pager.shop.model.feign.dto.UserInfoDTO">
        select
        t.id,
        t.phone,
        t.password,
        ti.username,
        ti.gender,
        ti.age,
        ti.email,
        ti.birthday,
        ti.avatar
        from t_user t inner join t_user_info ti on t.id = ti.user_id
        where t.phone = #{phone,jdbcType=VARCHAR} and t.delete_status = 0
    </select>

    <select id="selectByBatchPrimaryKey" resultType="quick.pager.shop.model.feign.dto.UserInfoDTO">
        select
        t.id,
        t.phone,
        t.password,
        ti.username,
        ti.gender,
        ti.age,
        ti.email,
        ti.birthday,
        ti.avatar
        from t_user t inner join t_user_info ti on t.id = ti.user_id
        where t.id in
        <foreach collection="userIds" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="isExists" resultMap="BaseResultMap">
        select id, phone from t_user where delete_status = 0 and phone in
        <foreach collection="phones" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>